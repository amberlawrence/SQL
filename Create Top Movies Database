--create a top movies database

CREATE TABLE topmovies(
   Rank        INTEGER,
   Title       TEXT,
   Studio      TEXT,
   Worldwide   REAL,
   Domestic    REAL,
   DomesticPct REAL,
   Overseas    REAL,
   OverseasPct REAL,
   Year        INTEGER
);

INSERT INTO topmovies (rank, title, studio, worldwide, domestic, domesticpct, overseas, overseaspct, year) VALUES (1,'Avatar','Fox',2788.00,760.50,0.27,2027.50,0.73,2009);

INSERT INTO topmovies(Rank,Title,Studio,Worldwide,Domestic,DomesticPct,Overseas,OverseasPct,Year) VALUES (2,'Titanic','Par.',2186.80,658.70,0.30,1528.10,0.70,1997);

INSERT INTO topmovies(Rank,Title,Studio,Worldwide,Domestic,DomesticPct,Overseas,OverseasPct,Year) VALUES (3,'Marvel''s The Avengers','BV',1518.60,623.40,0.41,895.20,0.59,2012);

INSERT INTO topmovies(Rank,Title,Studio,Worldwide,Domestic,DomesticPct,Overseas,OverseasPct,Year) VALUES (4,'Harry Potter and the Deathly Hallows Part 2','WB',1341.50,381.00,0.28,960.50,0.72,2011);

INSERT INTO topmovies(Rank,Title,Studio,Worldwide,Domestic,DomesticPct,Overseas,OverseasPct,Year) VALUES (5,'Furious 7','Uni.',1322.20,321.20,0.24,1001.00,0.76,2015);

INSERT INTO topmovies(Rank,Title,Studio,Worldwide,Domestic,DomesticPct,Overseas,OverseasPct,Year) VALUES (6,'Frozen','BV',1274.20,400.70,0.31,873.50,0.69,2013);

INSERT INTO topmovies(Rank,Title,Studio,Worldwide,Domestic,DomesticPct,Overseas,OverseasPct,Year) VALUES (7,'Iron Man 3','BV',1215.40,409.00,0.34,806.40,0.66,2013);

--display the database 
select * from topmovies;

--what are the average worldwide values of the data grouped by year?
select title, avg(worldwide) as average_worldwide from topmovies group by year;

--what are the maximum worldwide values of the data grouped by year?
select title, max(worldwide) as max_worldwide from topmovies group by year;

--what are the minimum worldwide values of the data grouped by year?
select title, min(worldwide) as min_worldwide from topmovies group by year;

--what is the sum of the worldwide values of the data grouped by title based on worldwide, overseas, and domestic data?
select title, sum(worldwide) as total_worldwide from topmovies group by title having total_worldwide > 1300 and overseas > 1500 or domestic > 600 order by total_worldwide asc;

--what are the most popluar and least popular worldwide values based on title?
select title, worldwide,
case
when worldwide > 1500 then "most popular"
when worldwide < 1500 then "least popular"
end as "popularity_ranking"
from topmovies;

--how many of each title are ranked most popular or least popular?
select count (*),
case
when worldwide > 1500 then "most popular"
when worldwide < 1500 then "least popular"
end as "popularity_ranking"
from topmovies
group by popularity_ranking; 



